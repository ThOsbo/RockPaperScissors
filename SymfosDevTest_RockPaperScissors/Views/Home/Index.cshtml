<div class="card">
    <div class="card-header">
        <div class="card-header-tabs">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <a href="#game" class="nav-link active" data-toggle="tab" role="tab" aria-controls="game" aria-selected="true">Game</a>
                </li>
                <li class="nav-item">
                    <a href="#rules" class="nav-link" data-toggle="tab" role="tab" aria-controls="rules" aria-selected="false">Rules</a>
                </li>
                <li class="nav-item">
                    <a href="#stats" class="nav-link" data-toggle="tab" role="tab" aria-controls="stats" aria-selected="false">Stats</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="card-body">
        <div class="tab-content">
            <div id="game" class="tab-pane fade active show">
                @Html.Partial("_Game")
            </div>

            <div id="rules" class="tab-pane fade">
                @Html.Partial("_Rules")
            </div>

            <div id="stats" class="tab-pane fade">
                @Html.Partial("_Stats")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        let difficulty = "@Common.Difficulty.Begginer.ToString()"
        let playMode = "@Common.PlayMode.PlayerVComputer.ToString()"

        let lastMoveP1 = "";
        let lastMoveP2 = "";

        let selectedMoveP1 = "";
        let selectedMoveP2 = "";

        let matchResult = "@Common.Result.Undecided.ToString()";

        let winNum = 0;
        let drawNum = 0;
        let lossNum = 0;

        let gamesPlayed = 0;

        $("#newGame").click(function (event) {
            difficulty = $("#difficulty").val();
            playMode = $("#playMode").val();

            if (playMode === "@Common.PlayMode.PlayerVComputer.ToString()") {
                $("#playerSelect").removeClass("invisible");
                $("#playerSelect").addClass("visible");
            }
            else {
                $("#playerSelect").removeClass("visible");
                $("#playerSelect").addClass("invisible");
            }

            $("#currPlayMode").html(playMode.toString());
            $("#currDifficulty").html(difficulty.toString());

            winNum = 0;
            drawNum = 0;
            lossNum = 0;

            $("#winNum").html("0");
            $("#drawNum").html("0");
            $("#lossNum").html("0");

            selectedMoveP1 = "";
            selectedMoveP2 = "";

            $("#selectedMoveP1").html("");
            $("#selectedMoveP2").html("");

            lastMoveP1 = "";
            lastMoveP2 = "";

            matchResult = "@Common.Result.Undecided.ToString()";
            $("#matchResult").html("@Common.Result.Undecided.ToString()");

            gamesPlayed = 0;

        });

        $("#select-@Common.Moves.Rock.ToString()").click(function (event) {
            selectedMoveP1 = "@Common.Moves.Rock.ToString()";
            $("#selectedMoveP1").html("@Common.Moves.Rock.ToString()");
        });

        $("#select-@Common.Moves.Paper.ToString()").click(function (event) {
            selectedMoveP1 = "@Common.Moves.Paper.ToString()";
            $("#selectedMoveP1").html("@Common.Moves.Paper.ToString()");
        });

        $("#select-@Common.Moves.Scissors.ToString()").click(function (event) {
            selectedMoveP1 = "@Common.Moves.Scissors.ToString()";
            $("#selectedMoveP1").html("@Common.Moves.Scissors.ToString()");
        });

        $("#makeMove").click(function (event) {
            if (playMode === "@Common.PlayMode.PlayerVComputer.ToString()" && selectedMoveP1 === "") {
                $("#selectedMoveP1").html("Hey! You need to make a move.");
            }
            else {
                gamesPlayed++;
                $.ajax({
                    url: "@Url.Action("MakeMove", "Home")",
                    type: "POST",
                    data: { lastMoveP1: lastMoveP1, lastMoveP2: lastMoveP2, gamesPlayed: gamesPlayed, difficulty: difficulty, playMode: playMode },
                    success: function (response) {
                        if (playMode === "@Common.PlayMode.PlayerVComputer.ToString()") {
                            selectedMoveP2 = response.p2Move;
                            $("#selectedMoveP2").html(response.p2Move);
                        }
                        else {
                            selectedMoveP1 = response.p1Move;
                            $("#selectedMoveP1").html(response.p1Move);
                            selectedMoveP2 = response.p2Move;
                            $("#selectedMoveP2").html(response.p2Move);
                        }

                        CheckResults();
                        DeclareResult();
                        if (lastMoveP2 != "") {
                            UpdateStats();
                        }

                        lastMoveP1 = selectedMoveP1;
                        lastMoveP2 = selectedMoveP2;
                    }
                })
            }
        });

        function CheckResults() {
            switch (selectedMoveP1) {
                case "@Common.Moves.Rock.ToString()":
                    switch (selectedMoveP2) {
                        case "@Common.Moves.Rock.ToString()":
                            matchResult = "@Common.Result.Draw.ToString()";
                            break;
                        case "@Common.Moves.Paper.ToString()":
                            matchResult = "@Common.Result.Loss.ToString()";
                            break;
                        case "@Common.Moves.Scissors.ToString()":
                            matchResult = "@Common.Result.Win.ToString()";
                            break;
                    }
                    break;
                case "@Common.Moves.Paper.ToString()":
                    switch (selectedMoveP2) {
                        case "@Common.Moves.Rock.ToString()":
                            matchResult = "@Common.Result.Win.ToString()";
                            break;
                        case "@Common.Moves.Paper.ToString()":
                            matchResult = "@Common.Result.Draw.ToString()";
                            break;
                        case "@Common.Moves.Scissors.ToString()":
                            matchResult = "@Common.Result.Loss.ToString()";
                            break;
                    }
                    break;
                case "@Common.Moves.Scissors.ToString()":
                    switch (selectedMoveP2) {
                        case "@Common.Moves.Rock.ToString()":
                            matchResult = "@Common.Result.Loss.ToString()";
                            break;
                        case "@Common.Moves.Paper.ToString()":
                            matchResult = "@Common.Result.Win.ToString()";
                            break;
                        case "@Common.Moves.Scissors.ToString()":
                            matchResult = "@Common.Result.Draw.ToString()";
                            break;
                    }
                    break;
            }
        }

        function DeclareResult() {
            $("#matchResult").html(matchResult);

            if (matchResult === "@Common.Result.Win.ToString()") {
                winNum++;
                $("#winNum").html(winNum.toString());
            }
            else if (matchResult === "@Common.Result.Draw.ToString()") {
                drawNum++;
                $("#drawNum").html(drawNum.toString());
            }
            else if (matchResult === "@Common.Result.Loss.ToString()") {
                lossNum++;
                $("#lossNum").html(lossNum.toString());
            }
        }

        function UpdateStats() {
            let tableCellId = `#stats-${difficulty}-${playMode}-${selectedMoveP1}-${lastMoveP2}`;

            let gamesPlayed = $(tableCellId).data("games");;
            let numWins = $(tableCellId).data("wins");

            gamesPlayed++;

            if (matchResult === "@Common.Result.Win.ToString()") {
                numWins++;
            }

            $(tableCellId).data("games", gamesPlayed);
            $(tableCellId).data("wins", numWins);

            $(tableCellId).html(`${numWins / gamesPlayed * 100}%`);
        }
    </script>
}
